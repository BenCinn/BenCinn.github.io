import{S as f,i as m,s as d,D as l,x as g,y as h,z as k,A as x,B as r,r as $,p as v,C as A,T as u,e as b,c as y,a as j,d as i,b as w,g as P,n as T}from"../../chunks/index-92e603ea.js";import{P as B}from"../../chunks/_post-22ecc1e3.js";function C(c){let a,t=`<code class="language-js"><span class="token keyword">import</span> box<span class="token punctuation">;</span>
nerf <span class="token operator">=</span> <span class="token function">box</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nerfGun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> # Begin nerfGun</code>`;return{c(){a=b("pre"),this.h()},l(s){a=y(s,"PRE",{class:!0});var e=j(a);e.forEach(i),this.h()},h(){w(a,"class","language-js")},m(s,e){P(s,a,e),a.innerHTML=t},p:T,d(s){s&&i(a)}}}function E(c){let a,t;const s=[c[0],_];let e={$$slots:{default:[C]},$$scope:{ctx:c}};for(let n=0;n<s.length;n+=1)e=l(e,s[n]);return a=new B({props:e}),{c(){g(a.$$.fragment)},l(n){h(a.$$.fragment,n)},m(n,o){k(a,n,o),t=!0},p(n,[o]){const p=o&1?x(s,[o&1&&r(n[0]),o&0&&r(_)]):{};o&2&&(p.$$scope={dirty:o,ctx:n}),a.$set(p)},i(n){t||($(a.$$.fragment,n),t=!0)},o(n){v(a.$$.fragment,n),t=!1},d(n){A(a,n)}}}const _={title:"AAAAAA",date:"2022-4-25",layout:"blog"};function G(c,a,t){return c.$$set=s=>{t(0,a=l(l({},a),u(s)))},a=u(a),[a]}class z extends f{constructor(a){super(),m(this,a,G,E,d,{})}}export{z as default,_ as metadata};
